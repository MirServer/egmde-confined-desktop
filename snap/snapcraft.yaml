name: egmde-confined-desktop
adopt-info: egmde
summary: A minimal Mir based desktop with some test applications
description: A minimal Mir based desktop with some test applications for demonstration purposes.
confinement: strict
grade: devel
base: core18

environment:
  SHELL: bash
  LC_ALL: C.UTF-8
  LD_LIBRARY_PATH: ${LD_LIBRARY_PATH}:${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/pulseaudio:${SNAP}/usr/lib/libreoffice/program/:${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/samba
  PATH: $SNAP/bin/:$SNAP/usr/bin/:${SNAP}/usr/games:${PATH}
  # XDG config
  XDG_CACHE_HOME:  $SNAP_USER_COMMON/.cache
  XDG_CONFIG_DIRS: ${SNAP}/etc/xdg:$XDG_CONFIG_DIRS
  XDG_CONFIG_HOME: $SNAP_USER_DATA/.config
  # Prep for Mir
  MIR_CLIENT_PLATFORM_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/mir/client-platform
  MIR_SERVER_PLATFORM_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/mir/server-platform
  # Prep for Qt wayland
  QT_PLUGIN_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/qt5/plugins/
  QT_QPA_PLATFORM_PLUGIN_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/qt5/plugins/platforms/
  QML2_IMPORT_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/qt5/qml
  QTCHOOSER_NO_GLOBAL_DIR: 1
  QT_SELECT: snappy-qt5

layout:
  /usr/share:
    bind: $SNAP/usr/share
  /etc/glvnd:
    bind: $SNAP/etc/glvnd
  /etc/gnome-chess:
    bind: $SNAP/etc/gnome-chess
  /etc/fonts:
    bind: $SNAP/etc/fonts

apps:
  egmde-confined-desktop:
    command: bin/run-egmde
    desktop: usr/share/wayland-sessions/egmde-confined-desktop.desktop
    slots:
      - mir
      - wayland
    plugs:
      - login-session-control
      - x11
    environment:
      # Prep PulseAudio
      PULSE_SERVER: unix:$XDG_RUNTIME_DIR/../pulse/native

  daemon:
    command: bin/run-egmde-daemon
    daemon: simple
    restart-condition: on-failure
    slots:
      - mir
      - wayland
    environment:
      # Prep PulseAudio
      PULSE_SYSTEM: 1
      PULSE_RUNTIME_PATH: /var/run/pulse

parts:
  ppa-mir:
    plugin: nil
    override-pull: |
      sudo apt --assume-yes install software-properties-common
      sudo add-apt-repository -yu ppa:mir-team/release
      # We shouldn't need to install stuff here, but it seems to fix intermittent build failures
      sudo apt --assume-yes install libmiral-dev mir-graphics-drivers-desktop
      snapcraftctl pull

  recipe-version:
    after: [ppa-mir]
    plugin: nil
    source: .
    source-type: git
    override-pull: |
      snapcraftctl pull
      git rev-list --count HEAD > $SNAPCRAFT_PART_INSTALL/recipe-version
    prime:
      - recipe-version

  egmde:
    after: [ppa-mir, recipe-version]
    override-pull: |
      snapcraftctl pull
      server_version=`git rev-list --count HEAD`
      mir_version=`LANG=C apt-cache policy mir-graphics-drivers-desktop | sed -rne 's/^\s+Candidate:\s+([^-]*)-.+$/\1/p'`
      recipe_version=`cat $SNAPCRAFT_STAGE/recipe-version`
      snapcraftctl set-version $server_version-mir$mir_version-snap$recipe_version
#      if echo $mir_version | grep dev; then snapcraftctl set-grade devel; else snapcraftctl set-grade stable; fi
    plugin: cmake
    source: https://github.com/AlanGriffiths/egmde.git
    build-packages:
    - pkg-config
    - libmiral-dev
    - libboost-filesystem-dev
    - libfreetype6-dev
    - libwayland-dev
    - libxkbcommon-dev
    stage-packages:
    - fonts-freefont-ttf
    - mir-graphics-drivers-desktop
    - libmiral3
    stage:
      - -usr/share/wayland-sessions/egmde.desktop

  icons:
    plugin: nil
    stage-packages: [dmz-cursor-theme]

  glue:
    plugin: dump
    source: glue

  misc:
    plugin: nil
    stage-packages:
    - libgl1-mesa-dri
    - libxcb1
    - libpulse0
    - libsndfile1
    - libasyncns0
    - liblua5.2-0
    - libslang2
    - libglu1-mesa
    - libgpm2
    - libgtk3-nocsd0
    - dbus
    # Debugging
    - gdb
    - strace

  sd2-apps:
    plugin: nil
    stage-packages:
    - libsdl2-2.0-0
    - libsdl2-image-2.0-0
    - libsdl2-mixer-2.0-0
    - libsdl2-net-2.0-0
    # SDL2 games
    - neverball
    - neverputt
    - caveexpress
#    - 0ad          ** Causes snap build to fail

  qt-apps:
    plugin: nil
    stage-packages:
    # Wayland platform
    - qtwayland5
    - libqt5core5a
    - libqt5dbus5
    - libqt5gui5
    - libqt5widgets5
    - libqt5x11extras5
    - libqtermwidget5-0
    # Apps
    - stellarium
    - qterminal
    - qtcreator
    - wireshark
    - quiterss
#    - kolourpaint    ** Pulls in kio, which adds ktelnetservice5.desktop (which fails to launch without URL)
#    - qutebrowser    ** built for X11 only
#    - falkon         ** built for X11 only
#    - vlc-plugin-qt  **Hard coded path to vlc
#    - vlc

  snapcraft-desktop-helpers:
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-subdir: gtk
    plugin: make
    make-parameters: ["FLAVOR=gtk3"]
    build-packages:
      - build-essential
      - libgtk-3-dev
    override-build: |
      snapcraftctl build
      # desktop-launch doesn't handle running without a user session very well, this avoids slow startup here
      sed --in-place s'/^  needs_update=true/:/' $SNAPCRAFT_PART_INSTALL/bin/desktop-launch

  gtk3-apps:
    plugin: nil
    stage-packages:
      - gnome-sudoku
      - gnome-mahjongg
      - gnome-chess
      - gnuchess
      - gnuchess-book

  native-apps:
    plugin: nil
    stage-packages:
      - glmark2-es2-wayland
      - libreoffice-gtk3

  kodi:
    plugin: ppa
    ppa: team-xbmc/ppa
    override-stage: |
      if [ -e "$SNAPCRAFT_PART_INSTALL/usr/bin/kodi" ]; then
        sed --in-place s'!/usr!${SNAP}/usr!' $SNAPCRAFT_PART_INSTALL/usr/bin/kodi
      fi
      snapcraftctl stage
    stage-packages:
      - to amd64: [ kodi-wayland, kodi-repository-kodi, kodi-visualization-spectrum, samba-libs ]
      - to  i386: [ kodi-wayland, kodi-repository-kodi, kodi-visualization-spectrum, samba-libs ]

plugs:
  opengl:
  pulseaudio:
  alsa:
  avahi-observe:
  hardware-observe:
  locale-control:
  mount-observe:
  network-observe:
  removable-media:
  shutdown:
  system-observe:
  # For GTK3+
  gtk-3-themes:
    interface: content
    target: $SNAP/data-dir/themes
    default-provider: gtk-common-themes
  icon-themes:
    interface: content
    target: $SNAP/data-dir/icons
    default-provider: gtk-common-themes
  sound-themes:
    interface: content
    target: $SNAP/data-dir/sounds
    default-provider: gtk-common-themes
