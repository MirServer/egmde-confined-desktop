name: egmde-confined-desktop
adopt-info: egmde
summary: A minimal Mir based desktop with some test applications
description: A minimal Mir based desktop with some test applications for demonstration purposes.
confinement: strict
base: core22
compression: lzo

environment:
  SHELL: bash
  LC_ALL: C.UTF-8
  PATH: $SNAP/bin/:$SNAP/usr/bin/:${SNAP}/usr/games:${PATH}
  # XDG config
  XDG_CONFIG_HOME: $SNAP_USER_DATA/.config
  XDG_DATA_HOME:   $SNAP_USER_DATA
  XDG_DATA_DIRS:   $SNAP/usr/share
  XDG_CONFIG_DIRS: $SNAP/etc/xdg
  XDG_CACHE_HOME:  $SNAP_USER_COMMON/.cache
  # Prep for Mir
  MIR_SERVER_PLATFORM_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/mir/server-platform
  # graphics
  LD_LIBRARY_PATH:           /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/pulseaudio:/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/samba:$SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/epiphany-browser:${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}
  # Prep for Qt wayland
  QT_PLUGIN_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/qt5/plugins/
  QT_QPA_PLATFORM_PLUGIN_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/qt5/plugins/platforms/
  QML2_IMPORT_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/qt5/qml
  QTCHOOSER_NO_GLOBAL_DIR: 1
  QT_SELECT: snappy-qt5
  PYTHONHOME: ${SNAP}/usr/
  # gio
  GIO_EXTRA_MODULES: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/gio/modules

layout:
  /usr/share/gnome-chess:
    bind: $SNAP/usr/share/gnome-chess
  /usr/share/gnuchess:
    bind: $SNAP/usr/share/gnuchess
  /usr/share/games:
    bind: $SNAP/usr/share/games
  /usr/share/glmark2:
    bind: $SNAP/usr/share/glmark2
  /usr/share/X11/xkb:
    bind: $SNAP/usr/share/X11/xkb
  /usr/share/fonts:
    bind: $SNAP/usr/share/fonts
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-2.0:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-2.0
  /etc/gnome-chess:
    bind: $SNAP/etc/gnome-chess
  /etc/fonts:
    bind: $SNAP/etc/fonts
  /usr/bin/xkbcomp:
    symlink: $SNAP/usr/bin/xkbcomp
  /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/kodi:
    bind: $SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/kodi
  /usr/share/kodi:
    bind: $SNAP/usr/share/kodi
  /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/pulseaudio:
    bind: $SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/pulseaudio
  /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/samba:
    bind: $SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/samba
  /usr/share/samba:
    bind: $SNAP/usr/share/samba
  /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/webkit2gtk-4.0:
    bind: $SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/webkit2gtk-4.0
  /etc/gtk-3.0:
    bind: $SNAP/etc/gtk-3.0
  /usr/share/libdrm:  # Needed by mesa-core22 on AMD GPUs
    bind: $SNAP/graphics/libdrm
  /usr/share/drirc.d:  # Used by mesa-core22 for app specific workarounds
    symlink: $SNAP/graphics/drirc.d
  /usr/share/libinput:
    bind: $SNAP/usr/share/libinput
  /etc/libinput:
    bind: $SNAP/etc/libinput

apps:
  egmde-confined-desktop:
    command-chain:
      - bin/setup-graphics
    command: bin/run-egmde
    desktop: usr/share/wayland-sessions/egmde-confined-desktop.desktop
    plugs:
      - login-session-control
      - x11
    environment:
      # Prep PulseAudio
      PULSE_SERVER: unix:$XDG_RUNTIME_DIR/../pulse/native

  daemon:
    command-chain:
      - bin/setup-graphics
    command: bin/run-egmde-daemon
    daemon: simple
    restart-condition: on-failure
    environment:
      # Prep PulseAudio
      PULSE_SYSTEM: 1
      PULSE_RUNTIME_PATH: /var/run/pulse
    slots:
      - wayland

  vnc:
    command: bin/run-egmde
    command-chain:
      - bin/run-vnc
    environment:
      # Prep PulseAudio
      PULSE_SERVER: unix:$XDG_RUNTIME_DIR/../pulse/native

parts:
  recipe-version:
    plugin: nil
    source: .
    source-type: git
    override-build: |
      git rev-list --count HEAD > $SNAPCRAFT_PART_INSTALL/recipe-version
      snapcraftctl build
    prime:
      - -recipe-version

  egmde:
    after: [recipe-version]
    override-pull: |
      snapcraftctl pull
      server_version=`git rev-list --count HEAD`
      mir_version=`LANG=C apt-cache policy mir-graphics-drivers-desktop | sed -rne 's/^\s+Candidate:\s+([^-]*)-.+$/\1/p'`
      recipe_version=`cat $SNAPCRAFT_STAGE/recipe-version`
      snapcraftctl set-version $server_version-mir$mir_version-snap$recipe_version
      if echo $mir_version | grep -e '+dev' -e '~rc' -q; then snapcraftctl set-grade devel; else snapcraftctl set-grade stable; fi
    plugin: cmake
    source: https://github.com/AlanGriffiths/egmde.git
    build-packages:
    - pkg-config
    - libmiral-dev
    - libboost-filesystem-dev
    - libfreetype6-dev
    - libwayland-dev
    - libxkbcommon-dev
    stage-packages:
      - libmiral5
      - mir-graphics-drivers-desktop
      - libfreetype6
      - fonts-freefont-ttf
    stage:
      - -usr/share/wayland-sessions/egmde.desktop

  icons:
    plugin: nil
    stage-packages: [dmz-cursor-theme]

  glue:
    plugin: dump
    source: glue

  misc:
    plugin: nil
    stage-packages:
    - libxcb1
    - libpulse0
    - libsndfile1
    - libasyncns0
    - liblua5.2-0
    - libslang2
    - libglu1-mesa
    - libgpm2
    - libgtk3-nocsd0

  terminal:
    plugin: nil
    stage-packages:
      - xfce4-terminal
      - libglib2.0-0
    override-build: |
      craftctl default
      update-mime-database $SNAPCRAFT_PART_INSTALL/usr/share/mime
    prime:
      - -usr/share/applications/exo-*
      - -usr/share/applications/xfce4-terminal-settings.desktop

  epiphany-browser:
    plugin: nil
    stage-packages:
      - epiphany-browser
    prime:
      - -usr/share/epiphany-browser/mime-types-permissions.xml

  gtk3-apps:
    plugin: nil
    build-packages:
      - libgdk-pixbuf2.0-0
      - librsvg2-common
      - shared-mime-info
    override-build: |
      # Update mime database
      update-mime-database ${SNAPCRAFT_PART_INSTALL}/usr/share/mime
    stage-packages:
      - librsvg2-common
      - gsettings-desktop-schemas
      - libglib2.0-bin
      - gnome-chess
      - gnuchess
      - gnuchess-book
    override-prime: |
      craftctl default
      # Compile the gsettings schemas
      /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/glib-2.0/glib-compile-schemas "$SNAPCRAFT_PRIME/usr/share/glib-2.0/schemas"
      # Index the pixbuf loaders
      LOADERS_PATH=$(echo ${SNAPCRAFT_PRIME}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/gdk-pixbuf-2.0/*/loaders)
      QUERY_LOADERS=/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/gdk-pixbuf-2.0/gdk-pixbuf-query-loaders
      GDK_PIXBUF_MODULEDIR=${LOADERS_PATH} ${QUERY_LOADERS} > ${LOADERS_PATH}/../loaders.cache
      sed s!$SNAPCRAFT_PRIME!!g --in-place ${LOADERS_PATH}/../loaders.cache


  native-apps:
    plugin: dump
    source: native-apps
    stage-packages:
      - glmark2-es2-wayland

  kodi:
    plugin: nil
    override-build: |
      craftctl default
      if [ -e "$SNAPCRAFT_PART_INSTALL/usr/bin/kodi" ]; then
        sed --in-place s'!/usr!${SNAP}/usr!' $SNAPCRAFT_PART_INSTALL/usr/bin/kodi
      fi
    stage-packages:
      - kodi
      - kodi-repository-kodi
      - kodi-visualization-spectrum
      - samba-libs
      - samba-common-bin
      - samba-common
      - libfstrcmp0
      - libpulse0
      - libaudio2
      - libsndio7.0
    prime:
      - -usr/share/applications/python2.7.desktop

  vnc:
    plugin: nil
    stage-packages:
      - xvfb
      - x11vnc
      - inotify-tools
      - util-linux
    stage:
      - -usr/share/applications

  cleanup:
    after:
      - egmde
      - icons
      - glue
      - misc
      - epiphany-browser
      - gtk3-apps
      - terminal
      - native-apps
      - kodi
      - vnc
    plugin: nil
    build-snaps: [ mesa-core22/edge ]
    override-prime: |
      set -eux
      cd /snap/mesa-core22/current/
      #find . -type f,l -exec rm -f $CRAFT_PRIME/{} \;
      cd  "$CRAFT_PRIME/usr/share/"
      rm -rf bug drirc.d glvnd libdrm lintian man

plugs:
  # For Mir server to work
  opengl:
  network-bind:
  graphics-core22:
    interface: content
    target: $SNAP/graphics
    default-provider: mesa-core22/edge
  # For various apps
  audio-playback:
  audio-record:
  avahi-observe:
  camera:
  locale-control:
  mount-observe:
  network-observe:
  removable-media:
  system-observe:

architectures:
  - build-on: amd64
  - build-on: arm64
  - build-on: armhf

package-repositories:
  - type: apt
    ppa: mir-team/release
