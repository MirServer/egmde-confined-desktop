name: egmde-confined-desktop
adopt-info: egmde
summary: A minimal Mir based desktop with some test applications
description: A minimal Mir based desktop with some test applications for demonstration purposes.
confinement: strict
grade: devel
base: core20

environment:
  SHELL: bash
  LC_ALL: C.UTF-8
  LD_LIBRARY_PATH: ${LD_LIBRARY_PATH}:/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/pulseaudio:/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/samba
  PATH: $SNAP/bin/:$SNAP/usr/bin/:${SNAP}/usr/games:${PATH}
  # XDG config
  XDG_CACHE_HOME:  $SNAP_USER_COMMON/.cache
  XDG_CONFIG_DIRS: ${SNAP}/etc/xdg:$XDG_CONFIG_DIRS
  XDG_CONFIG_HOME: $SNAP_USER_DATA/.config
  # Prep for Qt wayland
  QT_PLUGIN_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/qt5/plugins/
  QT_QPA_PLATFORM_PLUGIN_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/qt5/plugins/platforms/
  QML2_IMPORT_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/qt5/qml
  QTCHOOSER_NO_GLOBAL_DIR: 1
  QT_SELECT: snappy-qt5
  MIR_SERVER_XWAYLAND_PATH: ${SNAP}/usr/bin/Xwayland
  MIR_SERVER_ENABLE_X11: 1
  PYTHONHOME: ${SNAP}/usr/

layout:
  /usr/share/gnome-chess:
    bind: $SNAP/usr/share/gnome-chess
  /usr/share/gnuchess:
    bind: $SNAP/usr/share/gnuchess
  /usr/share/games:
    bind: $SNAP/usr/share/games
  /usr/share/glmark2:
    bind: $SNAP/usr/share/glmark2
  /usr/share/X11/xkb:
    bind: $SNAP/usr/share/X11/xkb
  /usr/share/fonts/truetype/freefont:
    bind: $SNAP/usr/share/fonts/truetype/freefont
  /usr/share/glvnd:
    bind: $SNAP/usr/share/glvnd
  /etc/glvnd:
    bind: $SNAP/etc/glvnd
  /etc/gnome-chess:
    bind: $SNAP/etc/gnome-chess
  /etc/fonts:
    bind: $SNAP/etc/fonts
  /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/mir:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/mir
  /opt/zoom:
    bind: $SNAP/opt/zoom
  /usr/bin/zoom:
    symlink: $SNAP/usr/bin/zoom
  /usr/bin/xkbcomp:
    symlink: $SNAP/usr/bin/xkbcomp
  /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/kodi:
    bind: $SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/kodi
  /usr/share/kodi:
    bind: $SNAP/usr/share/kodi
  /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/dri:
    bind: $SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/dri
  /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/pulseaudio:
    bind: $SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/pulseaudio
  /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/samba:
    bind: $SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/samba
  /usr/share/samba:
    bind: $SNAP/usr/share/samba

apps:
  egmde-confined-desktop:
    command: bin/run-egmde
    desktop: usr/share/wayland-sessions/egmde-confined-desktop.desktop
    plugs:
      - login-session-control
      - x11
    environment:
      # Prep PulseAudio
      PULSE_SERVER: unix:$XDG_RUNTIME_DIR/../pulse/native

  daemon:
    command: bin/run-egmde-daemon
    daemon: simple
    restart-condition: on-failure
    environment:
      # Prep PulseAudio
      PULSE_SYSTEM: 1
      PULSE_RUNTIME_PATH: /var/run/pulse
    slots:
      - wayland

parts:
  recipe-version:
    plugin: nil
    source: .
    source-type: git
    override-build: |
      git rev-list --count HEAD > $SNAPCRAFT_PART_INSTALL/recipe-version
      snapcraftctl build
    prime:
      - recipe-version

  ppa-setup:
    plugin: nil
    override-pull: |
      sudo apt --assume-yes install software-properties-common
      sudo add-apt-repository -y ppa:mir-team/release
      snapcraftctl pull

  egmde:
    after: [recipe-version, ppa-setup]
    override-pull: |
      snapcraftctl pull
      server_version=`git rev-list --count HEAD`
      mir_version=`LANG=C apt-cache policy mir-graphics-drivers-desktop | sed -rne 's/^\s+Candidate:\s+([^-]*)-.+$/\1/p'`
      recipe_version=`cat $SNAPCRAFT_STAGE/recipe-version`
      snapcraftctl set-version $server_version-mir$mir_version-snap$recipe_version
#      if echo $mir_version | grep dev; then snapcraftctl set-grade devel; else snapcraftctl set-grade stable; fi
    plugin: cmake
    source: https://github.com/AlanGriffiths/egmde.git
    override-build: |
      sudo apt install --assume-yes libmiral-dev
      snapcraftctl build
    build-packages:
    - pkg-config
    - libmiral-dev
    - libboost-filesystem-dev
    - libfreetype6-dev
    - libwayland-dev
    - libxkbcommon-dev
    stage-packages:
      - libmiral4
      - mir-graphics-drivers-desktop
      - libfreetype6
      - fonts-freefont-ttf
    stage:
      - -usr/share/wayland-sessions/egmde.desktop

  icons:
    plugin: nil
    stage-packages: [dmz-cursor-theme]

  glue:
    plugin: dump
    source: glue

  misc:
    plugin: nil
    stage-packages:
    - libgl1-mesa-dri
    - libxcb1
    - libpulse0
    - libsndfile1
    - libasyncns0
    - liblua5.2-0
    - libslang2
    - libglu1-mesa
    - libgpm2
    - libgtk3-nocsd0
    - dbus

  snapcraft-desktop-helpers:
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-subdir: gtk
    plugin: make
    make-parameters: ["FLAVOR=gtk3"]
    build-packages:
      - build-essential
      - libgtk-3-dev
    override-build: |
      snapcraftctl build
      # desktop-launch doesn't handle running without a user session very well, this avoids slow startup here
      sed --in-place s'/^  needs_update=true/:/' $SNAPCRAFT_PART_INSTALL/bin/desktop-launch

  firefox:
    after:
      - snapcraft-desktop-helpers
    plugin: dump
    source: firefox
    override-build: |
      snapcraftctl build
      rm -f $SNAPCRAFT_PART_INSTALL/usr/share/applications/python3.6.desktop
    stage-packages:
      - firefox

  gtk3-apps:
    plugin: nil
    stage-packages:
      - gnome-chess
      - gnuchess
      - gnuchess-book

  native-apps:
    plugin: dump
    source: native-apps
    stage-packages:
      - glmark2-es2
      - glmark2-es2-wayland

  kodi:
    plugin: nil
    override-build: |
      snapcraftctl build
      if [ -e "$SNAPCRAFT_PART_INSTALL/usr/bin/kodi" ]; then
        sed --in-place s'!/usr!${SNAP}/usr!' $SNAPCRAFT_PART_INSTALL/usr/bin/kodi
      fi
      rm -f $SNAPCRAFT_PART_INSTALL/usr/share/applications/python2.7.desktop
    stage-packages:
      - kodi
      - kodi-wayland
      - kodi-repository-kodi
      - kodi-visualization-spectrum
      - samba-libs
      - samba-common-bin
      - samba-common
      - libfstrcmp0
      - libpulse0
      - libaudio2
      - libsndio7.0
      - va-driver-all

  zoom:
    plugin: dump
    source: https://zoom.us/client/latest/zoom_amd64.deb
    override-build: |
      if [[ `arch` = "x86_64" ]]; then
        # remove dangling symlink
        rm -f $SNAPCRAFT_PART_BUILD/usr/bin/zoom
        echo "QT_QPA_PLATFORM=xcb \$SNAP/opt/zoom/ZoomLauncher" > $SNAPCRAFT_PART_BUILD/usr/bin/zoom
        chmod +x $SNAPCRAFT_PART_BUILD/usr/bin/zoom
        # Unfrig LD_LIBRARY_PATH
        sed -i s/D_LIBRAR/XXXXXXXX/g opt/zoom/ZoomLauncher
        snapcraftctl build
      fi
    build-attributes: [keep-execstack]
    stage-packages:
      - on amd64:
        - libnspr4
        - libnss3
        - libpulse-mainloop-glib0
        - libqt53dcore5
        - libqt53dinput5
        - libqt53dlogic5
        - libqt53dquick5
        - libqt53dquickscene2d5
        - libqt53drender5
        - libqt5concurrent5
        - libqt5core5a
        - libqt5dbus5
        - libqt5gui5
        - libqt5multimedia5
        - libqt5multimedia5-plugins
        - libqt5network5
        - libqt5printsupport5
        - libqt5qml5
        - libqt5quick5
        - libqt5quickcontrols2-5
        - libqt5quickparticles5
        - libqt5quicktemplates2-5
        - libqt5sql5
        - libqt5waylandclient5
        - libqt5widgets5
        - libqt5xmlpatterns5
        - libxcb-image0
        - libxcb-keysyms1
        - libxcb-randr0
        - libxcb-xtest0
        - libx11-6
        - libxtst6
        - pulseaudio-utils

  xwayland:
    plugin: nil
    stage-packages:
      - xwayland
      - libbz2-1.0

plugs:
  # For Mir server to work
  opengl:
  network-bind:
  # For various apps
  alsa:
  audio-playback:
  avahi-observe:
  locale-control:
  mount-observe:
  network-observe:
  pulseaudio:
  removable-media:
  shutdown:
  system-observe:
  # For GTK3+
  gtk-3-themes:
    interface: content
    target: $SNAP/data-dir/themes
    default-provider: gtk-common-themes
  icon-themes:
    interface: content
    target: $SNAP/data-dir/icons
    default-provider: gtk-common-themes
  sound-themes:
    interface: content
    target: $SNAP/data-dir/sounds
    default-provider: gtk-common-themes
